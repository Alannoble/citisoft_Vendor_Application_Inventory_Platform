<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>